// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL") 
}



model Project {
  id String @id @default(cuid())
  title String
  image String?
  description String
  isPublic Boolean @default(false) // feed "eier" relasjonen
  author User @relation(fields: [authorId], references: [id]) // Koble autherId til id
  authorId String // mange til mange
  tags ProjectTag[]
  collaborators ProjectCollaborator[] // en til mange => en project kan ha mange followers
}

model User {
  id String @id @default(cuid())
  name String 
  projects Project[] // en til mange => en bruker kan ha mange projects
  collaborators ProjectCollaborator[] // en til mange => en bruker kan følge mange projects
}

model ProjectTag {
  id String @id @default(cuid())
  name String @unique // mange til mange
  projects Project[]
}

model ProjectCollaborator {
  createdAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id]) // mange til mange med user
  userId String
  project Project @relation(fields: [projectId], references: [id]) // mange til mange med project
  projectId String
  @@id([userId, projectId]) // sørger for at userId og projectId er unike sammen
}

